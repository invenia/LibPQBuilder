name: Builder
# Run on tags
on:
  push:
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10
env:
  BINARYBUILDER_DOWNLOADS_CACHE: downloads
  BINARYBUILDER_AUTOMATIC_APPLE: true
jobs:
  build:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # All history for all branches and tags
      - name: Install Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.0'
      # Do we need some sort of cache here?
      - name: Update BinaryProvider/Builder
        run: |
          julia -e '
            using Pkg
            pkg"add BinaryProvider"
            pkg"add BinaryBuilder#master"
            Pkg.build()'
      - name: Build Tarballs
        run: |
          julia build_tarballs.jl
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object,
          # which include a `upload_url`. See this blog post for more info:
          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./products/*.tar.gz
          asset_content_type: application/zip
